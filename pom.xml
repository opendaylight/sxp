<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opendaylight.odlparent</groupId>
    <artifactId>odlparent</artifactId>
    <version>1.6.0-SNAPSHOT</version>
    <relativePath></relativePath>
  </parent>

  <groupId>org.opendaylight.sxp</groupId>
  <artifactId>sxp-parent</artifactId>
  <version>1.2.0-SNAPSHOT</version>
  <name>sxp</name> <!-- Used by Sonar to set project name -->
  <packaging>pom</packaging>

  <modules>
    <module>sxp-api</module>
    <module>sxp-controller</module>
    <module>sxp-core</module>
    <!-- module>sxp-runtime</module -->
    <!-- Karaf -->
    <module>sxp-config</module>
    <module>features</module>
    <module>sxp-karaf</module>
  </modules>

  <properties>
    <!-- Optional TODO: Rename your configfile to taste -->
    <configfilebase>22-sxp-controller-one-node.xml</configfilebase>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <packaging-suffix>jar</packaging-suffix>

    <config.output.base.dir>${project.build.directory}/generated-sources/config</config.output.base.dir>
    <gencode.output.base.dir>${project.build.directory}/generated-sources/sal</gencode.output.base.dir>

    <!-- Plugin Versions -->
    <maven.shade.plugin.version>2.3</maven.shade.plugin.version>

    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <java.version.source>1.7</java.version.source>
    <java.version.target>1.7</java.version.target>

    <yangtools.version>0.8.0-SNAPSHOT</yangtools.version>
    <yangtools.feature.version>0.8.0-SNAPSHOT</yangtools.feature.version>
    <mdsal.version>1.3.0-SNAPSHOT</mdsal.version>
    <config.version>0.4.0-SNAPSHOT</config.version>
    <restconf.version>1.3.0-SNAPSHOT</restconf.version>

    <!-- Yang Module Versions -->
    <ietf-inet-types.version>2010.09.24.8-SNAPSHOT</ietf-inet-types.version>
    <ietf-yang-types.version>2010.09.24.8-SNAPSHOT</ietf-yang-types.version>
    <yang-ext.version>2013.09.07.8-SNAPSHOT</yang-ext.version>
    <yang-nt.version>2013.10.21.8-SNAPSHOT</yang-nt.version>

    <!-- Utils Versions -->
    <powermock.version>1.5.4</powermock.version>
    <tcpmd5.version>1.2.0-SNAPSHOT</tcpmd5.version>
    <swt.version>4.4</swt.version>

  </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-artifact</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <type>${project.packaging}</type>
                                    <destFileName>${project.groupId}.${project.artifactId}-${project.version}.${packaging-suffix}</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>../target</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>../target/configuration-initial</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/configuration/initial</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin-->

        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <extensions>true</extensions>
                    <configuration>
                        <instructions>
                            <Bundle-Name>${project.groupId}.${project.artifactId}</Bundle-Name>
                        </instructions>
                        <manifestLocation>${project.basedir}/META-INF</manifestLocation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${config.output.base.dir}</source>
                                    <source>${gencode.output.base.dir}</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>../../target</directory>
                                <followSymlinks>false</followSymlinks>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse
                    m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.opendaylight.yangtools
                                        </groupId>
                                        <artifactId>
                                            yang-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.5,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                generate-sources
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <finalName>${project.groupId}.${project.artifactId}-${project.version}</finalName>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- project modules dependencies -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>sxp-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>sxp-controller</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>sxp-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>sxp-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- yang model dependencies -->
            <dependency>
                <groupId>org.opendaylight.yangtools.model</groupId>
                <artifactId>ietf-inet-types</artifactId>
                <version>${ietf-inet-types.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.yangtools.model</groupId>
                <artifactId>ietf-yang-types</artifactId>
                <version>${ietf-yang-types.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.yangtools.model</groupId>
                <artifactId>yang-ext</artifactId>
                <version>${yang-ext.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.yangtools.model</groupId>
                <artifactId>ietf-topology</artifactId>
                <version>${yang-nt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>config-api</artifactId>
                <version>${config.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>sal-binding-config</artifactId>
                <version>${mdsal.version}</version>
            </dependency>

            <!-- yangtools dependencies -->
            <dependency>
                <groupId>org.opendaylight.yangtools</groupId>
                <artifactId>yang-binding</artifactId>
                <version>${yangtools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.yangtools</groupId>
                <artifactId>yang-common</artifactId>
                <version>${yangtools.version}</version>
            </dependency>

            <!-- tcpmd5 dependencies -->
            <dependency>
                <groupId>org.opendaylight.tcpmd5</groupId>
                <artifactId>tcpmd5-jni</artifactId>
                <version>${tcpmd5.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.tcpmd5</groupId>
                <artifactId>tcpmd5-netty</artifactId>
                <version>${tcpmd5.version}</version>
            </dependency>

            <!-- md-sal dependecies -->
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>sal-binding-api</artifactId>
                <version>${mdsal.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>sal-common-util</artifactId>
                <version>${mdsal.version}</version>
            </dependency>

            <!-- utils dependencies -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.swt</groupId>
                <artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
                <version>${swt.version}</version>
            </dependency>

            <!-- testing dependencies -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
